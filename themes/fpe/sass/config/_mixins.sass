// Mixins
// --------
// Mixins allow you to define styles that can be re-used / throughout the
// stylesheet without needing to resort to / non-semantic classes like .float-
// left. Mixins can also / contain full CSS rules, and anything else allowed /
// elsewhere in a Sass document. They can even take / arguments which allows you
// to produce a wide variety / of styles with very few mixins.

// For complete documentation:
// Sass mixins: http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#mixins
// Bourbon mixins: http://bourbon.io/docs/

// Omega Reset for Bourbon Neat grid
// Read more: http://www.joshfry.me/blog/2013/05/13/omega-reset-for-bourbon-neat
@mixin omega-reset($nth)
  &:nth-child(#{$nth})
    margin-right: flex-gutter()
  &:nth-child(#{$nth}+1)
    clear: none


@mixin clip-path($clip)
	clip-path: $clip
	-webkit-clip-path: $clip
	-moz-clip-path: $clip
	-ms-clip-path: $clip

@mixin centered-container
  margin-left: 2rem
  margin-right: 2rem
  @include media($medium-screen-up)
    width: 90%
    margin-left: auto
    margin-right: auto
  @include media($large-screen-up)
    width: 800px

@mixin right-arrow($font-size)
  background-image: url(../../images/optimized/arrow.svg)
  background-repeat: no-repeat
  background-size: $font-size / 2
  background-position-y: $font-size / 4
  padding-left: $font-size

@mixin hyphens-auto
  -ms-word-break: break-all
  word-break: break-all

  // Non standard for webkit
  word-break: break-word

  -webkit-hyphens: auto
  -moz-hyphens: auto
  hyphens: auto

@mixin horizontal-line($color)
  overflow: hidden
  text-align: center
  &:before,
  &:after
    background-color: $color
    content: ""
    display: inline-block
    height: 1px
    position: relative
    vertical-align: middle
    width: 50%
  &:before
    right: $small-spacing
    margin-left: -50%
  &:after
    left: $small-spacing
    margin-right: -50%
  > *
    display: inline-block

@mixin salmi
  $angle: 36deg
  text-transform: uppercase
  padding: 0 $base-spacing * 2
  margin: 0
  line-height: 2
  transform: skewX(-$angle)
  > *
    display: inline-block
    transform: skewX($angle)

@mixin inverted-link
  color: $pirates-blue
  &:focus,
  &:hover
    color: $action-color-inverted
